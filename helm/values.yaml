# Default values for city-os-ui-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  baseHostUrl: staging-mainz.dksr.city
  keycloakUrl: https://auth.staging-mainz.dksr.city
  keycloakRealm: city-os

replicaCount: 1

image:
  pullPolicy: Always
  repository: registry.gitlab.com/dksr2/city-os-product/city-os-masterfrontend/dev
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets:
  - name: regcredgl

nameOverride: ''
fullnameOverride: ''

podAnnotations: { }

service:
  type: ClusterIP
  port: 80

connections:
  search: ''
  repo: ''
  store: ''
  sparql: ''
  superset: ''
  digitalTwin: ''
  middleware: ''

customerConfig:
  name: ''
  primaryColor: '#164194'
  landingPagePublic: true
  requiresLogin: true
  modules:
    # everything that is not explicitly requested to be always avail shall be deactivated by default
    home:
      available: true
      order: 1
      requiresLogin: true
      widgets: ''
    dashboards:
      available: false
      order: 3
      requiresLogin: true
    organisationSites:
      available: false
      order: 5
      requiresLogin: true
    dataCatalog:
      available: true
      order: 4
      requiresLogin: true
    digitalTwin:
      available: false
      order: 2
      requiresLogin: true
    dksrApps:
      available: false
      order: 6
      requiresLogin: true
  appHeader:
    logoFileName: ''
    headerTitle: ''
    userMenu:
      first:
        translationKey: city-os.layout.app-header-dropdown.user-profile
        urlTarget: /app/user-profile
      second:
        translationKey: city-os.layout.app-header-dropdown.personal-settings
        urlTarget: /app/user-profile
      third:
        translationKey: city-os.layout.app-header-dropdown.data-exchange
        urlTarget: /app/data-catalog/data-exchange
      fourth:
        translationKey: city-os.layout.app-header-dropdown.my-work
        urlTarget: '#'
      fifth:
        translationKey: city-os.layout.app-header-dropdown.user-management
        urlTarget: '#'
        requiresRole: administrator
      sixth:
        translationKey: city-os.layout.app-header-dropdown.legal-notices
        urlTarget: /app/data-notices
  components:
    headerImageFileName: ''
  dashboard:
    username: ''
    password: ''
    embeddableDashboardId: ''
  oup:
    url: ''
    username: ''
    password: ''
  homeQuickLinks:
    first:
      title: ''
      subtitle: ''
      icon: ''
      route: ''
    second:
      title: ''
      subtitle: ''
      icon: ''
      route: ''
    third:
      title: ''
      subtitle: ''
      icon: ''
      route: ''

languages:
  displayOptions:
    - de
    - en
    - cs
  fallbackLanguage: de

authConfig:
  enabled: true
  clientId: city-os
  clientSecret: ''
  issuer: ''
  minTokenValidity: 300
  serverUrl: '{{ .Values.global.keycloakUrl}}'
  realm: '{{ .Values.global.keycloakRealm }}'

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required - dksr-ui
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers  "X-XSS-Protection: 0";
      more_set_headers  "X-Content-Type-Options: nosniff";
      more_set_headers  "Referrer-Policy: strict-origin-when-cross-origin";
  host: '{{ .Values.global.baseHostUrl }}'
  path: /
  pathType: ImplementationSpecific
  # # @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  # # TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" (tpl .Values.ingress.hostname .) }}`
  # # You can:
  # #   - Use the `ingress.secrets` parameter to create this TLS secret
  # #   - Rely on cert-manager to create it by setting the corresponding annotations
  # #   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  # #
  tls: true
  # # @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
  # # see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  # # extraTls:
  # # - hosts:
  # #     - city-os.local
  # #   secretName: city-os.local-tls
  # #
  extraTls: []

resources:
  requests:
    cpu: 500m
    memory: 500Mi
